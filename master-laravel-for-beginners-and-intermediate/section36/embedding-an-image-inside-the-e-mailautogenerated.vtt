WEBVTT

00:00.930 --> 00:07.140
In the last lecture we've seen how we can embed an image inside that email content.

00:07.410 --> 00:13.830
And in this one we'll learn how we can actually create proper attachments with some files that users

00:13.830 --> 00:15.660
can then download.

00:15.660 --> 00:22.380
So this is a valid use case in cases where for example you have an application that is selling tickets

00:22.380 --> 00:28.950
to an events and you have some PDA files which contain a ticket and then you want to send that to the

00:28.950 --> 00:29.740
user.

00:29.850 --> 00:36.570
Or alternatively Another example is that you might have a tool that is doing something and then from

00:36.570 --> 00:39.180
time to time you need to send some reports.

00:39.180 --> 00:46.320
Let's say there are CSA file reports for the users to download them along with the e-mail.

00:46.320 --> 00:52.910
So let's see a first example of how we can attach files to our emails.

00:52.920 --> 00:58.170
So first example the simplest one would be to use the attach method.

00:58.170 --> 01:00.660
You can see what are the expected attributes.

01:00.660 --> 01:06.770
So it expects a file name and then optionally an array of options.

01:06.780 --> 01:11.030
So here you will have to provide the full path of this file.

01:11.040 --> 01:18.450
So currently we only have front line images for blog posts and profile avatars of the users.

01:18.450 --> 01:22.070
So let's see how we can get one of those files.

01:22.170 --> 01:27.330
So we are not using the storage facility from Lara villa here.

01:27.390 --> 01:34.630
So to get proper path of a file will actually need to use this storage path.

01:34.680 --> 01:41.750
This helper function will give us the full path to our up Public Storage folder.

01:41.880 --> 01:49.500
So notice that I am just creating an example to actually upload an attachment to an email using the

01:49.500 --> 01:50.790
attach method.

01:50.790 --> 01:57.810
But normally you will use that if you for example do not use the storage mechanism of Lara.

01:57.870 --> 01:59.250
You just want to.

01:59.520 --> 02:05.580
Or you just have a full path to our specific file that you just want to send.

02:05.580 --> 02:12.700
So now we are just trying to have the actual image being attached so the remaining part of the path

02:12.760 --> 02:22.780
would be this comment then comment has a user user has an image and the image has that path attribute.

02:22.780 --> 02:27.010
So now let's save the genders and actually see if this works.

02:27.040 --> 02:34.290
So as we write some comment like Hi I'm liking this doesn't really matter.

02:34.420 --> 02:40.070
Now press other comments so we can see if this file has been actually attached.

02:40.210 --> 02:42.140
So that should be this email.

02:42.160 --> 02:44.480
So this is our embedded image.

02:44.950 --> 02:53.060
But now on the right you can see the attachments bottom and there is a file you can click and download.

02:53.370 --> 02:55.160
This happens to be the profile image.

02:55.170 --> 02:57.800
As I've said we are just showing the examples.

02:57.810 --> 03:06.790
Doesn't really matter what we are sending here right now so that's the first way to attach something

03:07.730 --> 03:13.900
but sometimes you might also need some additional options to be provided.

03:13.910 --> 03:21.100
So this is the second parameter an array where you can specify a parameter called us.

03:21.170 --> 03:28.310
So this will be providing what's the actual file name that the user will see in that attachment.

03:28.310 --> 03:33.350
So here you can see that this name was out to generate it for the user.

03:33.350 --> 03:39.560
So it doesn't really say much but in case you will be sending things like I said for example ticket.

03:40.460 --> 03:43.830
So this file happens to have an j pick extension.

03:43.880 --> 03:54.630
So let's say profile picture JPEG and additionally you can specify the mime attribute which would be

03:54.630 --> 03:56.460
the mind type of the file.

03:56.490 --> 03:59.380
So this is the image JPEG.

03:59.610 --> 04:06.120
So this works best if you for example are sending tickets so you can call that file ticket PDA.

04:06.240 --> 04:13.240
So users will know what is inside the attachment or something like report see his file.

04:13.260 --> 04:19.230
So they will know that they wanted a report and they got it and they will immediately know what should

04:19.230 --> 04:20.820
they download.

04:20.820 --> 04:23.520
So first let's work with this example.

04:23.520 --> 04:25.160
So write some comment again.

04:25.260 --> 04:26.760
Hello.

04:26.760 --> 04:33.690
Another comment.

04:33.770 --> 04:39.150
Now let's refresh the inbox and see the attachments so you can see it up now.

04:39.200 --> 04:41.280
The name is how we provided that.

04:41.300 --> 04:43.170
So profile picture JPEG

04:45.980 --> 04:55.190
so we actually won't need that inside the application so let's just comment that out first example with

04:55.400 --> 04:56.470
full path

04:59.290 --> 05:07.090
now since we are actually using the storage for seed inside our application there is another method

05:07.120 --> 05:14.660
called attach from storage where we only have to specify that path of the fire.

05:14.710 --> 05:20.030
And this would use the default disk by the way which in our case is the public disk.

05:20.050 --> 05:26.690
So if you don't remember about disks you can go back to the lecture or just open the file system speech

05:26.710 --> 05:30.580
B file where you can see all the disks that are configured.

05:30.640 --> 05:33.990
So this is the different one public.

05:34.170 --> 05:40.710
So now since we are actually using this default disk the path to this file would be this comment user

05:40.800 --> 05:41.970
image path

05:44.980 --> 05:45.430
now.

05:45.460 --> 05:50.020
This also accepts a second parameter which would be the file name.

05:50.020 --> 05:57.400
So instead of providing this using US option inside the options are right you can just specify it as

05:57.400 --> 05:58.540
the second parameter.

05:58.540 --> 06:03.030
So this would be profile picture JPEG.

06:03.040 --> 06:09.400
And then additionally the first parameter of this method is an array of options which you can use it

06:09.520 --> 06:10.990
as you see above.

06:11.020 --> 06:17.020
So we can provide a MIME type and couple of other options which you can find inside the link of the

06:17.020 --> 06:20.680
lot of documentation of what is actually possible.

06:21.690 --> 06:23.440
So let's try out this example.

06:23.440 --> 06:24.580
This should also work

06:27.240 --> 06:31.960
attach from storage.

06:32.130 --> 06:35.720
Now we should see this email very soon inside the mail drop.

06:35.730 --> 06:42.010
It's almost immediately visible so you can see that this works.

06:42.010 --> 06:45.130
And the comment is the same so we can see that this worked.

06:45.130 --> 06:47.930
Also this time.

06:48.060 --> 06:49.860
Now let's also comment that out

06:52.750 --> 07:01.060
Additionally when you are using multiple disks you can use a touch from storage disk.

07:01.090 --> 07:04.440
This is essentially the same as attach from storage.

07:04.450 --> 07:08.220
But this time you specify from which disk you would like to attach something.

07:08.680 --> 07:15.930
So we can also use public because actually this image is stored using the public disk.

07:15.970 --> 07:19.680
Otherwise this would just not be found.

07:19.690 --> 07:25.770
Now let's also comment about this example because we also don't need that for our application and let's

07:25.780 --> 07:29.340
see another way of sending files this time.

07:29.380 --> 07:36.960
We want to be attaching a file that exists somewhere on the disk you will see how to attach our data

07:37.170 --> 07:44.160
so you will basically let's say you have the file already inside the memory and a good use case is when

07:44.160 --> 07:52.170
for example someone uploads a file and then you wants to immediately send this file in an email to someone

07:52.170 --> 07:52.730
else.

07:52.770 --> 07:59.100
For example you have an application which accepts some documents or reports that have to be uploaded

07:59.130 --> 08:00.380
at the end of work.

08:00.450 --> 08:06.210
Let's say at the end of the day and immediately after processing and maybe storing them you would like

08:06.210 --> 08:14.610
to email them to the boss let's say so here attach data accepts our data as the first parameter which

08:14.820 --> 08:19.090
actually has to be the contents of the file that will be attached.

08:19.200 --> 08:27.900
So to have a working example we can use the storage for seed which minded that you have to import.

08:28.020 --> 08:30.000
That's the proper namespace.

08:30.480 --> 08:38.580
And the storage for it has the get method so I am just showing this to you so you will know how to actually

08:38.590 --> 08:40.770
read a file using storage

08:43.790 --> 08:44.140
now.

08:44.150 --> 08:51.110
Storage shed will read the contents of the file but then probably the good idea is to provide the file

08:51.110 --> 08:52.430
name.

08:52.430 --> 08:54.850
And actually this is our required parameter.

08:54.890 --> 09:02.530
So let's say profile picture from data JPEG.

09:03.310 --> 09:10.780
So mind I am just giving this name as an example and then Optionally you can also specify an array of

09:10.870 --> 09:20.530
options which can be the MIME type image JPEG but obviously this is perfect use case when as I've said

09:20.560 --> 09:28.360
you have something inside the memory you then do not want to read that again from the disk or when someone

09:28.360 --> 09:34.600
have just uploaded something and then you need to send out using an email.

09:34.750 --> 09:37.250
So let's see if this will also work.

09:37.300 --> 09:47.580
So let's add a comment on attachment from the data other comment and we should see data very soon inside

09:47.640 --> 09:55.420
our inbox a refreshed at let us see the attachment list and there it is profile picture from the data.

09:55.590 --> 10:02.290
Let's even open that to make sure that this actually had the contents of the file and obviously it did.

10:02.310 --> 10:05.610
So those are the ways you can use to attach something.

10:05.640 --> 10:08.220
Let's also finally comment that out.

10:08.490 --> 10:10.820
So you see that you can attach the raw data.

10:10.860 --> 10:17.270
If you happen to have it or you have some uploaded file that was just uploaded you need to send it somewhere.

10:17.490 --> 10:25.140
You can read the files using the storage for site or you can read files using the full path of the file

10:25.170 --> 10:27.630
which you happen to have for example.

10:27.630 --> 10:33.060
And then additionally you can specify options like the file name that should be given to the attachment

10:33.570 --> 10:38.700
and the mind type which would specify what is the type of the content which is being attached.
