WEBVTT

00:00.810 --> 00:07.120
In the last couple of lectures we covered the basics of authorization in Lara.

00:07.320 --> 00:15.960
So we defined a couple of gate checks particularly those two and we also seen how we can override those

00:15.960 --> 00:21.480
gate checks using the before or optionally and after a handler.

00:21.480 --> 00:29.130
And the problem with this is that all of those gate checks are defined in a single file specifically

00:29.130 --> 00:31.410
in our service provider.

00:31.440 --> 00:35.340
So currently we only have two abilities defined.

00:36.030 --> 00:42.480
But you can imagine how quickly this file can grow to an enormous size.

00:42.480 --> 00:49.200
And while this will basically become unreadable if you will have much more models inside your application

00:49.710 --> 00:53.060
and much more possible abilities.

00:53.190 --> 00:59.130
And if you will all define them inside this one single file this would become a mess.

00:59.130 --> 01:01.050
That's pretty obvious.

01:01.110 --> 01:08.870
So there is a way we can organize it better in Lavell and it is called policies.

01:09.030 --> 01:15.620
So let's go ahead and create our first policy for the blog post model.

01:16.080 --> 01:22.170
So policy is just another class in Murrysville which we can generate generate using artisan.

01:22.320 --> 01:32.320
So let's go ahead and type BHP artisan make policy and call this new policy blog post policy.

01:32.580 --> 01:40.290
So notice on the left you have new folder created called policies and inside it there is that blog post

01:40.410 --> 01:41.810
policy class.

01:42.090 --> 01:51.780
So how policies work and are organized is that you will have to define methods inside this class which

01:51.780 --> 01:56.140
would be abilities on this particular model.

01:56.220 --> 02:03.630
Actually they don't have to be tied to one particular model you can create any policies but they are

02:03.630 --> 02:13.170
just a way to organize your abilities into some logical manner the same as you do with controllers when

02:13.170 --> 02:14.730
you have a post controller.

02:14.940 --> 02:22.740
You put all the actions that are related to creating displaying or deleting blog posts into one single

02:22.740 --> 02:29.530
controller like the post controller and you might do the same with policies.

02:29.610 --> 02:34.440
So as you see this class is currently empty.

02:34.440 --> 02:38.920
So I've just shown you that basic command to create a policy.

02:39.210 --> 02:47.640
But if we are to work with policy that is specific to a blog post we can do better.

02:47.880 --> 02:53.730
So let's go ahead and delete these policies folder.

02:53.850 --> 03:02.070
Move it to trust and worry about that and let's run this command again this time peach deep HP artisan

03:02.400 --> 03:04.350
make policy.

03:04.350 --> 03:08.610
Call it the same blog post policy.

03:09.030 --> 03:16.320
But this time will provide an additional argument called model and will specify that we want this to

03:16.320 --> 03:25.230
be generated for our blog post model press enter and now let's see what we have generated.

03:26.190 --> 03:37.040
So now you can see that we have a lot of methods like crude methods for our blog post and this more

03:37.060 --> 03:44.640
or less relates to the crude actions that you can do with a post so you can view the blog post you can

03:44.640 --> 03:54.030
create one update one you can delete it or while you can restore it or force deleted which means to

03:54.030 --> 03:57.840
remove it from the database altogether.

03:57.870 --> 04:02.510
So this is just this is just generated by lava.

04:02.550 --> 04:10.980
It doesn't mean you have to create abilities with those names but it's just a convenient way to quickly

04:11.190 --> 04:20.190
and easily create policies for your models which actually seems to map to the actions and abilities

04:20.220 --> 04:26.430
that you will probably most of the time have for your models.

04:26.430 --> 04:31.430
Now let's see how we can actually tell a lot of oil to use our policies.

04:31.920 --> 04:39.480
And if you are on lateral five point seven you will have to register this policies on a lot of our five

04:39.480 --> 04:40.290
point eight.

04:40.290 --> 04:46.860
There is something called out the discovery of policies which I will talk about in a second.

04:46.860 --> 04:56.040
So first let's go ahead and implement this block policy for what we have which is the post delete mind

04:56.040 --> 05:04.730
that you have to change the argument name here to a blog post now we can copy that and pasted inside

05:04.820 --> 05:06.350
the update method.

05:06.380 --> 05:11.420
So those are the two abilities that we currently have.

05:11.450 --> 05:16.460
So save the changes and go back to the service provider.

05:16.550 --> 05:23.200
So we specified those abilities using the policy glasses similar to how we did.

05:23.200 --> 05:27.170
We have those policies which we use closures for.

05:27.410 --> 05:32.480
But let's use the larval convention for naming those abilities.

05:32.480 --> 05:36.380
So we'll do posts update.

05:36.380 --> 05:44.290
That's the name of the ability and what we will do now is we have to specify a class name.

05:44.300 --> 05:56.390
So up policies sorry up Boyce's blog post policy and a method name which is that update for this case

05:58.410 --> 06:02.390
let's also copy it is to add another one for deleting.

06:02.630 --> 06:03.650
So delete

06:06.800 --> 06:07.850
and save the changes.

06:07.880 --> 06:16.310
So now you can comment out those two and since we have used our new name a new convention for those

06:16.310 --> 06:22.700
ability names you will have to also modify in every place where you reference it.

06:22.700 --> 06:25.370
So this would be here an hour before check.

06:25.370 --> 06:29.990
Now it is not update post about the posts update.

06:29.990 --> 06:42.190
And also inside the controller here in the edit action it is now posts update in the update action posts

06:42.250 --> 06:46.880
update and in the destroy action it is now.

06:46.870 --> 06:48.850
Posts delete

06:53.320 --> 06:53.620
okay.

06:53.630 --> 07:02.020
Now let's also comment out this overwrite this gate interception for a bit so we can verify if this

07:02.020 --> 07:05.590
blog post policy actually works.

07:05.590 --> 07:07.750
So let's add D.D. here.

07:08.820 --> 07:17.300
And echo something like updating and do the same for the delete D.D..

07:18.220 --> 07:28.360
Deleting save the changes and let's go to our blog post least so I've have temporarily disabled the

07:28.450 --> 07:35.060
override for admin so we can see if our blog posts policy is actually in place.

07:35.380 --> 07:36.700
So let's try editing.

07:36.700 --> 07:41.050
You can see that we have the message updating and delete.

07:41.080 --> 07:47.320
We have the message deleting which means our blog posts policy is actually working.

07:47.920 --> 07:50.390
So now we can remove those two lines.

07:50.410 --> 07:53.620
Remember to save the changes.

07:53.620 --> 08:02.410
So what we have right now is we have organized the logic around granting the access to the blog post

08:02.410 --> 08:03.190
model.

08:03.190 --> 08:11.650
In this particular class the blog post policy and this would of course make much more sense if we would

08:11.680 --> 08:20.440
have a lot of models and then instead of defining all of them here inside the service provider we can

08:20.800 --> 08:25.060
just grouped them into a single block post policy.

08:25.070 --> 08:25.510
Class

08:29.610 --> 08:37.290
now what is important to know about the policy classes is those method names does does not really have

08:37.290 --> 08:40.310
to be as they are generated by this comment.

08:40.320 --> 08:43.860
You can come up with any name that you like.

08:43.860 --> 08:51.760
Then just make sure that when you are defining your ability name you reference the correct method name.

08:51.900 --> 09:01.190
Now there is another benefit of out of generating those blog posts policy class with the model flag.

09:01.320 --> 09:09.720
This is that we can instead of defining all of those policies all of those abilities individually we

09:09.720 --> 09:19.350
can just use our resource method of the gate for state just specify a prefix and now instead of defining

09:19.440 --> 09:26.370
a method for each individual ability we just define a class.

09:26.370 --> 09:35.460
Now let's comment that out and what you will get out of the box using gate resource is you will have

09:35.670 --> 09:49.690
the posts create posts view posts update and posts delete defined of course if you use the default names

09:49.720 --> 09:52.900
defined or created by this command.

09:52.930 --> 10:02.500
So if you do not modify those ability names then you can get that out of the box for a particular policy

10:02.590 --> 10:03.700
class.

10:03.700 --> 10:12.010
Now what that means for us is let's for example go to the create method inside our post controller which

10:12.010 --> 10:17.680
is only responsible for displaying our create blog post form.

10:17.770 --> 10:28.770
So if you will do this out to rise posts create and now just save the changes.

10:28.810 --> 10:34.500
Now if you will go to the application and now try to add a blog post you can see that you are not out

10:34.500 --> 10:37.230
to rise to perform this action.

10:37.600 --> 10:44.230
And this is because it ultimately have registered using gate resources.

10:44.230 --> 10:47.140
We have those for abilities.

10:47.140 --> 10:52.660
So they're supposed to create which automatically is running this method.

10:52.930 --> 10:59.890
And since it does not return anything by default you are not allowed to perform an action.

11:00.010 --> 11:05.920
So let's do return true and try to create a blog post again.

11:05.920 --> 11:10.020
Now we can see you are allowed to do that.

11:10.060 --> 11:18.490
So this is just a very convenient way to define an authorization abilities and it's pretty useful if

11:18.490 --> 11:23.110
you center your outer reservation logic around models.

11:23.320 --> 11:30.580
So let's remove that because we actually wants to currently at least allow all the registered users

11:30.580 --> 11:35.680
to add blog posts so you can comment that out to leave it for our reference.
