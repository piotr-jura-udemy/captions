WEBVTT

00:00.630 --> 00:03.440
So this is what we have ended up in the last lecture.

00:03.450 --> 00:04.670
We just returned.

00:04.740 --> 00:10.530
Simple Jason inside our post command control our mind that this is the controller with the namespace

00:10.590 --> 00:19.530
API v 1 which means this is our API endpoint currently it of course returns this as an array that we

00:19.680 --> 00:21.130
returned from the end points.

00:21.120 --> 00:28.710
So basically this is nothing useful and we can quickly get that to return in comments and we can use

00:28.710 --> 00:30.180
what we already have.

00:30.180 --> 00:36.900
When we played around with returning Jason using resource collections in this post comment controller

00:36.930 --> 00:38.760
that we had previously.

00:38.790 --> 00:45.390
So what we can do is just copy this code as this would be essentially the same and just replace whatever

00:45.390 --> 00:46.900
we have here.

00:47.100 --> 00:53.700
We can also REFORMAT THAT A LITTLE BIT BUT OF COURSE WE CAN'T USE PPOs because it's not not defined

00:53.790 --> 00:55.330
on their methods.

00:55.530 --> 01:04.750
So we have to define blog post and the name of the variable is of course important because that's the

01:04.780 --> 01:08.280
exactly matching the name of the parameter on the root.

01:08.290 --> 01:17.230
You can check that if you will run BGP artisan route least you can use grep API.

01:17.230 --> 01:22.710
This might not really be readable but that is this action.

01:22.750 --> 01:25.870
So the route parameter name is post.

01:25.870 --> 01:33.790
So of course if this will match the name of the parameter on your method and you will specify a class

01:33.820 --> 01:40.900
then we can use the route model binding and lateral will automatically fetch an instance of the blog

01:40.900 --> 01:43.120
post model for us.

01:43.200 --> 01:43.460
Okay.

01:43.480 --> 01:52.330
So we are returning all the post comments here but of course another thing to do is to import this comment

01:52.360 --> 01:53.440
resource class.

01:53.460 --> 01:55.310
So let's do that now.

01:55.570 --> 01:57.420
We don't really have to write it again.

01:57.430 --> 02:05.140
We can just copy from this controller base that here and let's check if this end point is working right

02:05.140 --> 02:05.890
now.

02:07.250 --> 02:10.800
So with this it rhythms all the comments from this blog post.

02:10.820 --> 02:17.690
It seems that there is actually 7 comments and what you can see is that by default Lavell is always

02:17.690 --> 02:19.160
wrapping this response.

02:19.160 --> 02:23.070
This collection response with the key data.

02:23.060 --> 02:29.360
So sometimes you do not need that and it's only useful if you provide some additional information about

02:29.360 --> 02:29.710
this.

02:29.720 --> 02:31.360
We'll get to that in the next lecture.

02:31.370 --> 02:34.210
And this means for example parking nation formation.

02:34.220 --> 02:42.020
If you would like to split the response into chunks so let's say you have 300 resources to return at

02:42.020 --> 02:46.540
once and you do not want to do that and return everything at once.

02:46.550 --> 02:53.060
Then you can introduce some plugin nation but in this case when we don't need it we can remove this

02:53.060 --> 02:58.380
data wrapping from larval atoll and let's see how we can do that.

02:58.670 --> 03:02.230
So let's go to visualize the code and opened that up.

03:02.240 --> 03:11.090
Service provider that's the firewall we keep most of our general settings and what you can do is either

03:11.270 --> 03:15.230
you can specify that for certain resources like this one.

03:15.230 --> 03:19.420
So let's first copy the namespace.

03:19.880 --> 03:27.890
You don't want this resource this up HDP resources comment resource to be to have this wrapping with

03:27.890 --> 03:28.720
the data.

03:28.880 --> 03:32.720
And this is done simply so you use the class name.

03:32.720 --> 03:40.010
This is comment resource because we have imported it as such and you can call this static method without

03:40.010 --> 03:41.480
wrapping.

03:41.700 --> 03:42.980
Now save the changes

03:46.630 --> 03:53.230
and voila it's not being wrapped inside the data but this will only work if you are returning.

03:53.930 --> 03:55.020
Comment resource.

03:55.050 --> 04:01.380
So this will only work for this specific resource if you want this generically.

04:01.480 --> 04:10.660
You can do resource make sure you use that import from this namespace eliminate HDP resources Jason

04:10.690 --> 04:19.030
resource and then it of course has the same method but the difference is that you can use specific resource

04:19.030 --> 04:26.440
classes to disable this data wrapping only for those particular resources and then if you will call

04:26.440 --> 04:31.000
that on the resource from which all this resource classes extend.

04:31.000 --> 04:33.700
So it's a base class for all of them.

04:33.820 --> 04:42.070
The wrapping will be disabled for everything so let's keep it like that for now and verified that it

04:42.070 --> 04:42.790
works.

04:42.790 --> 04:44.200
Yes it does.

04:44.200 --> 04:45.820
So of course you don't have to do that.

04:45.820 --> 04:53.890
It's it's not adding anything to your payload when you return the data from the server but well sometimes

04:53.890 --> 04:57.760
you might just want to keep things simple and that's the way to do it.
